[user]
  name = Blake Taylor
  email = blakefrost@gmail.com
[github]
  user = blakefrost
[color]
  status = auto
  diff = auto
[rerere]
  enabled = 1
[branch]
  autosetupmerge = true
[push]
  default = upstream
[alias]
  # Cleans out your workspace. I should make an un-nuke.
  nuke = !git clean -fd && git reset --hard

  # Undoes nuke
  # Note: Should only apply to clean head
  unuke = !echo "Implement me"

  # Show unpushed changes
  up = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git log origin/$GIT_CURRENT_BRANCH..$GIT_CURRENT_BRANCH --oneline
  # Show the diff
  upd = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git diff origin/$GIT_CURRENT_BRANCH..$GIT_CURRENT_BRANCH

  # Lose any unpushed changes
  lose = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git reset --hard origin/$GIT_CURRENT_BRANCH

  # Display project root
  root = !ROOT=$(pwd) && echo $ROOT

  # Stash All
  sa = !git add -A && git stash

  # Commit All
  # This will - Review Changes and stage all, Accept Message (If abort, print the msg to stdou), commit.
  ca = !echo "Implement me"

  # Go to next most recently edited branch
  crawl = !echo "Implement me"

  # Github Style Branch list
  #branches = !git for-each-ref --count=400 --sort=-committerdate refs/heads/ --format='printf "%%-40s %%4d behind\t%%4d ahead\t%%-20s\t%%30s\n" "$(echo %(refname) | cut -d / -f 3-)" "$(echo $(git log %(objectname)..head --oneline | wc -l))" "$(git log head..%(objectname) --oneline | wc -l)" "%(authorname)" "%(authordate)"' | $SHELL | less

  # List branches according to you most recent checkouts.
  recent = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git reflog | grep checkout | cut -d : -f 3 | cut -d ' ' -f 4 | cat -n | sort -k2,2 -u | sort -k1,1 -n | cut -f 2 | grep -e '.\\{40\\}' -v | grep $GIT_CURRENT_BRANCH -v | head -n 30 | cat -n

  publish = !BRANCH=$(git name-rev --name-only HEAD) && git push -u origin $BRANCH
[core]
  excludesfile = /Users/blake/.gitignore
  quotepath = false
